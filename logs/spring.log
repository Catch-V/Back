2022-09-07 14:42:42.823  INFO 39279 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 14:42:42.828  INFO 39279 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : upload2
2022-09-07 14:47:01.096  INFO 39279 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 14:47:01.116  INFO 39279 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 14:47:01.150  INFO 39279 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 14:47:09.115  INFO 39723 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 39723 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 14:47:09.119  INFO 39723 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 14:47:09.432  INFO 39723 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 14:47:09.432  INFO 39723 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 14:47:10.423  INFO 39723 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 14:47:10.424  INFO 39723 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 14:47:10.441  INFO 39723 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.
2022-09-07 14:47:10.453  INFO 39723 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 14:47:10.454  INFO 39723 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 14:47:10.461  INFO 39723 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 14:47:11.252  INFO 39723 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 14:47:11.264  INFO 39723 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 14:47:11.265  INFO 39723 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 14:47:11.356  INFO 39723 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 14:47:11.358  INFO 39723 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1926 ms
2022-09-07 14:47:11.492  INFO 39723 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 14:47:11.891  INFO 39723 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 14:47:11.944  INFO 39723 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 14:47:11.978  INFO 39723 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 14:47:12.098  INFO 39723 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 14:47:12.184  INFO 39723 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 14:47:12.319  INFO 39723 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 14:47:12.325  INFO 39723 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 14:47:12.447  WARN 39723 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 14:47:13.451  INFO 39723 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 14:47:13.497  INFO 39723 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 14:47:13.516  INFO 39723 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 4.866 seconds (JVM running for 6.178)
2022-09-07 14:47:24.853  INFO 39723 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 14:47:24.854  INFO 39723 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 14:47:24.855  INFO 39723 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-09-07 14:47:25.056  INFO 39723 --- [http-nio-8080-exec-2] c.c.s.controller.MainServiceController   : upload
2022-09-07 14:47:25.091  INFO 39723 --- [http-nio-8080-exec-2] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 14:47:25.094  INFO 39723 --- [http-nio-8080-exec-2] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 14:47:25.097  INFO 39723 --- [http-nio-8080-exec-2] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:14:18.896 ERROR 39723 --- [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Current request is not a multipart request] with root cause

org.springframework.web.multipart.MultipartException: Current request is not a multipart request
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:210) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 16:16:20.603  INFO 39723 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:16:20.631  INFO 39723 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:16:20.659  INFO 39723 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:16:30.846  INFO 62078 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 62078 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:16:30.890  INFO 62078 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:16:31.577  INFO 62078 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:16:31.578  INFO 62078 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:16:33.313  INFO 62078 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:16:33.325  INFO 62078 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:16:33.398  INFO 62078 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:16:33.421  INFO 62078 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:16:33.421  INFO 62078 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:16:33.430  INFO 62078 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2022-09-07 16:16:34.926  INFO 62078 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:16:34.937  INFO 62078 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:16:34.937  INFO 62078 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:16:35.057  INFO 62078 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:16:35.059  INFO 62078 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3481 ms
2022-09-07 16:16:35.301  INFO 62078 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:16:36.129  INFO 62078 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:16:36.245  INFO 62078 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:16:36.322  INFO 62078 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:16:36.553  INFO 62078 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:16:36.715  INFO 62078 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:16:36.954  INFO 62078 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:16:36.960  INFO 62078 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:16:37.092  WARN 62078 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:16:38.362  INFO 62078 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:16:38.413  INFO 62078 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:16:38.437  INFO 62078 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 8.511 seconds (JVM running for 10.816)
2022-09-07 16:17:20.191  INFO 62078 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:17:20.193  INFO 62078 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:17:20.198  INFO 62078 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2022-09-07 16:17:20.487 ERROR 62078 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Current request is not a multipart request] with root cause

org.springframework.web.multipart.MultipartException: Current request is not a multipart request
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:210) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 16:18:05.686  INFO 62078 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:18:05.706  INFO 62078 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:18:05.790  INFO 62078 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:18:11.952  INFO 62394 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 62394 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:18:11.961  INFO 62394 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:18:12.262  INFO 62394 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:18:12.262  INFO 62394 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:18:13.486  INFO 62394 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:18:13.489  INFO 62394 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:18:13.514  INFO 62394 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:18:13.529  INFO 62394 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:18:13.530  INFO 62394 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:18:13.538  INFO 62394 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 16:18:14.557  INFO 62394 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:18:14.566  INFO 62394 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:18:14.566  INFO 62394 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:18:14.667  INFO 62394 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:18:14.668  INFO 62394 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2406 ms
2022-09-07 16:18:14.828  INFO 62394 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:18:15.231  INFO 62394 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:18:15.294  INFO 62394 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:18:15.333  INFO 62394 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:18:15.469  INFO 62394 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:18:15.551  INFO 62394 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:18:15.692  INFO 62394 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:18:15.699  INFO 62394 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:18:15.822  WARN 62394 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:18:17.066  INFO 62394 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:18:17.122  INFO 62394 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:18:17.144  INFO 62394 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.661 seconds (JVM running for 6.627)
2022-09-07 16:18:32.411  INFO 62394 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:18:32.412  INFO 62394 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:18:32.416  INFO 62394 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 16:18:32.562 ERROR 62394 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Current request is not a multipart request] with root cause

org.springframework.web.multipart.MultipartException: Current request is not a multipart request
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:210) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 16:22:22.959  INFO 62394 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:22:22.983  INFO 62394 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:22:23.016  INFO 62394 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:22:30.088  INFO 62968 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 62968 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:22:30.098  INFO 62968 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:22:30.417  INFO 62968 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:22:30.417  INFO 62968 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:22:31.358  INFO 62968 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:22:31.360  INFO 62968 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:22:31.377  INFO 62968 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:22:31.388  INFO 62968 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:22:31.388  INFO 62968 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:22:31.393  INFO 62968 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 16:22:32.252  INFO 62968 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:22:32.263  INFO 62968 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:22:32.263  INFO 62968 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:22:32.362  INFO 62968 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:22:32.363  INFO 62968 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1945 ms
2022-09-07 16:22:32.522  INFO 62968 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:22:32.927  INFO 62968 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:22:32.987  INFO 62968 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:22:33.025  INFO 62968 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:22:33.150  INFO 62968 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:22:33.228  INFO 62968 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:22:33.357  INFO 62968 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:22:33.363  INFO 62968 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:22:33.492  WARN 62968 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:22:34.493  INFO 62968 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:22:34.539  INFO 62968 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:22:34.559  INFO 62968 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.033 seconds (JVM running for 6.033)
2022-09-07 16:26:41.915  INFO 62968 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:26:41.916  INFO 62968 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:26:41.920  INFO 62968 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 16:26:42.237  WARN 62968 --- [http-nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingRequestHeaderException: Required request header 'userEmail' for method parameter type String is not present]
2022-09-07 16:27:59.870  INFO 62968 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:27:59.883  INFO 62968 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:27:59.918  INFO 62968 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:28:07.228  INFO 63693 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 63693 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:28:07.233  INFO 63693 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:28:07.582  INFO 63693 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:28:07.583  INFO 63693 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:28:08.602  INFO 63693 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:28:08.603  INFO 63693 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:28:08.636  INFO 63693 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:28:08.648  INFO 63693 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:28:08.649  INFO 63693 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:28:08.658  INFO 63693 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 16:28:09.476  INFO 63693 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:28:09.486  INFO 63693 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:28:09.487  INFO 63693 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:28:09.577  INFO 63693 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:28:09.582  INFO 63693 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1999 ms
2022-09-07 16:28:09.728  INFO 63693 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:28:10.095  INFO 63693 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:28:10.145  INFO 63693 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:28:10.177  INFO 63693 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:28:10.299  INFO 63693 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:28:10.379  INFO 63693 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:28:10.507  INFO 63693 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:28:10.513  INFO 63693 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:28:10.604  WARN 63693 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:28:11.640  INFO 63693 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:28:11.684  INFO 63693 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:28:11.704  INFO 63693 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.173 seconds (JVM running for 6.365)
2022-09-07 16:28:19.271  INFO 63693 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:28:19.272  INFO 63693 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:28:19.273  INFO 63693 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-09-07 16:28:19.524  INFO 63693 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : upload
2022-09-07 16:28:19.595  INFO 63693 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:28:19.644  INFO 63693 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:28:19.653  INFO 63693 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:30:40.789  INFO 63693 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:30:40.801  INFO 63693 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:30:40.816  INFO 63693 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:30:47.597  INFO 63955 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 63955 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:30:47.598  INFO 63955 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:30:48.016  INFO 63955 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:30:48.016  INFO 63955 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:30:49.040  INFO 63955 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:30:49.042  INFO 63955 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:30:49.058  INFO 63955 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:30:49.075  INFO 63955 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:30:49.076  INFO 63955 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:30:49.081  INFO 63955 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 16:30:49.826  INFO 63955 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:30:49.835  INFO 63955 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:30:49.836  INFO 63955 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:30:49.928  INFO 63955 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:30:49.930  INFO 63955 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1913 ms
2022-09-07 16:30:50.077  INFO 63955 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:30:50.490  INFO 63955 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:30:50.542  INFO 63955 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:30:50.575  INFO 63955 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:30:50.689  INFO 63955 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:30:50.769  INFO 63955 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:30:50.894  INFO 63955 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:30:50.899  INFO 63955 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:30:51.043  WARN 63955 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:30:52.216  INFO 63955 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:30:52.269  INFO 63955 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:30:52.295  INFO 63955 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.19 seconds (JVM running for 6.7)
2022-09-07 16:31:02.120  INFO 63955 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:31:02.120  INFO 63955 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:31:02.121  INFO 63955 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-09-07 16:31:02.374  INFO 63955 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : upload
2022-09-07 16:31:02.377  INFO 63955 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2cf918e7, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@59c6b0b3, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@11782242]
2022-09-07 16:31:02.453  INFO 63955 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:31:02.490  INFO 63955 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:31:02.491  INFO 63955 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@11782242
2022-09-07 16:32:20.254  INFO 63955 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:32:20.265  INFO 63955 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:32:20.283  INFO 63955 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:32:26.634  INFO 64135 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 64135 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:32:26.640  INFO 64135 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:32:26.943  INFO 64135 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:32:26.944  INFO 64135 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:32:27.850  INFO 64135 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:32:27.851  INFO 64135 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:32:27.868  INFO 64135 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:32:27.878  INFO 64135 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:32:27.879  INFO 64135 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:32:27.884  INFO 64135 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 1 ms. Found 0 JPA repository interfaces.
2022-09-07 16:32:28.584  INFO 64135 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:32:28.591  INFO 64135 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:32:28.592  INFO 64135 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:32:28.671  INFO 64135 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:32:28.677  INFO 64135 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1733 ms
2022-09-07 16:32:28.835  INFO 64135 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:32:29.208  INFO 64135 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:32:29.263  INFO 64135 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:32:29.296  INFO 64135 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:32:29.418  INFO 64135 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:32:29.503  INFO 64135 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:32:29.657  INFO 64135 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:32:29.664  INFO 64135 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:32:29.773  WARN 64135 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:32:30.836  INFO 64135 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:32:30.885  INFO 64135 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:32:30.905  INFO 64135 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 4.712 seconds (JVM running for 5.716)
2022-09-07 16:32:40.852  INFO 64135 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:32:40.853  INFO 64135 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:32:40.854  INFO 64135 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-09-07 16:32:41.073  WARN 64135 --- [http-nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2fb9205c, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19607239, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@43ad6aed]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:34:35.266  WARN 64135 --- [http-nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6297e027, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6c501205, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@686f8b57]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:35:43.188  WARN 64135 --- [http-nio-8080-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2be1fdd2, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@252606de]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:36:08.224  WARN 64135 --- [http-nio-8080-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile' to required type 'java.lang.String'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile' to required type 'java.lang.String': no matching editors or conversion strategy found]
2022-09-07 16:36:24.558  WARN 64135 --- [http-nio-8080-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@53a61591, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5d61e195, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@595e7ee1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1c5cebae]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:37:05.023  WARN 64135 --- [http-nio-8080-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2ce1155f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2226feb3, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@26197e2f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@631bf488]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:38:41.065  WARN 64135 --- [http-nio-8080-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5635d2ca, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@58f2367c, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5ccdb9ba, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19cf3c47]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:40:43.553  WARN 64135 --- [http-nio-8080-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.util.ArrayList' to required type 'java.lang.String'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.util.ArrayList<?>] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String] for value '[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@40e98300, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4e2e756d, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4a11e870, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@f137f56]'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile] to type [@org.springframework.web.bind.annotation.RequestParam java.lang.String]]
2022-09-07 16:41:11.328  INFO 64135 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:41:11.346  INFO 64135 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 16:41:11.384  INFO 64135 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 16:41:18.015  INFO 65088 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 65088 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 16:41:18.023  INFO 65088 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 16:41:18.349  INFO 65088 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 16:41:18.350  INFO 65088 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 16:41:19.271  INFO 65088 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:41:19.272  INFO 65088 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 16:41:19.290  INFO 65088 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.
2022-09-07 16:41:19.302  INFO 65088 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 16:41:19.302  INFO 65088 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 16:41:19.307  INFO 65088 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 16:41:20.039  INFO 65088 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 16:41:20.048  INFO 65088 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 16:41:20.048  INFO 65088 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 16:41:20.124  INFO 65088 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 16:41:20.125  INFO 65088 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1775 ms
2022-09-07 16:41:20.259  INFO 65088 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 16:41:20.688  INFO 65088 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 16:41:20.747  INFO 65088 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 16:41:20.783  INFO 65088 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 16:41:20.909  INFO 65088 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 16:41:21.057  INFO 65088 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 16:41:21.240  INFO 65088 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 16:41:21.247  INFO 65088 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 16:41:21.345  WARN 65088 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 16:41:22.478  INFO 65088 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 16:41:22.526  INFO 65088 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 16:41:22.547  INFO 65088 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.039 seconds (JVM running for 6.082)
2022-09-07 16:41:37.127  INFO 65088 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 16:41:37.128  INFO 65088 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 16:41:37.129  INFO 65088 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-09-07 16:41:37.370  INFO 65088 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : upload
2022-09-07 16:41:37.373  INFO 65088 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : jihun@jihun.com
2022-09-07 16:41:37.456  INFO 65088 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:41:37.492  INFO 65088 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:41:37.510  INFO 65088 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 16:41:37.510  INFO 65088 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@385d72ae
2022-09-07 18:05:47.585  INFO 65088 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:05:47.603  INFO 65088 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 18:05:47.634  INFO 65088 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 18:05:55.558  INFO 78330 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 78330 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 18:05:55.560  INFO 78330 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 18:05:55.908  INFO 78330 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 18:05:55.908  INFO 78330 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 18:05:56.821  INFO 78330 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:05:56.822  INFO 78330 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 18:05:56.837  INFO 78330 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 0 JDBC repository interfaces.
2022-09-07 18:05:56.853  INFO 78330 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:05:56.854  INFO 78330 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 18:05:56.859  INFO 78330 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 1 ms. Found 0 JPA repository interfaces.
2022-09-07 18:05:57.674  INFO 78330 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 18:05:57.683  INFO 78330 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 18:05:57.683  INFO 78330 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 18:05:57.775  INFO 78330 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 18:05:57.776  INFO 78330 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1867 ms
2022-09-07 18:05:57.942  INFO 78330 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 18:05:58.337  INFO 78330 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 18:05:58.396  INFO 78330 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 18:05:58.431  INFO 78330 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 18:05:58.552  INFO 78330 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 18:05:58.634  INFO 78330 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 18:05:58.762  INFO 78330 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 18:05:58.769  INFO 78330 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:05:58.905  WARN 78330 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 18:05:59.955  INFO 78330 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 18:06:00.008  INFO 78330 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 18:06:00.032  INFO 78330 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 4.947 seconds (JVM running for 5.98)
2022-09-07 18:06:35.900  INFO 78330 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 18:06:35.901  INFO 78330 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 18:06:35.905  INFO 78330 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 18:06:36.177  INFO 78330 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : upload
2022-09-07 18:06:36.180  INFO 78330 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : jihun@jihun.com
2022-09-07 18:06:36.225  INFO 78330 --- [http-nio-8080-exec-1] c.c.s.S.dao.FaceDataDaoJDBC              : 업로드 성공
2022-09-07 18:06:36.226  INFO 78330 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1397704f
2022-09-07 18:09:19.389  INFO 78330 --- [http-nio-8080-exec-2] c.c.s.controller.MainServiceController   : try.
2022-09-07 18:09:19.499 ERROR 78330 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.io.FileDescriptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1300) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:46) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:29) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1518) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1007) ~[jackson-databind-2.13.3.jar:2.13.3]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.writeInternal(AbstractGenericHttpMessageConverter.java:113) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writePart(FormHttpMessageConverter.java:541) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeParts(FormHttpMessageConverter.java:517) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeMultipart(FormHttpMessageConverter.java:497) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:369) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:156) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:991) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:70) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 18:38:51.244  INFO 78330 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:38:51.264  INFO 78330 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 18:38:51.285  INFO 78330 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 18:39:59.724  INFO 81852 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 81852 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 18:39:59.730  INFO 81852 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 18:40:00.071  INFO 81852 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 18:40:00.071  INFO 81852 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 18:40:01.094  INFO 81852 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:40:01.095  INFO 81852 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 18:40:01.113  INFO 81852 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.
2022-09-07 18:40:01.124  INFO 81852 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:40:01.124  INFO 81852 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 18:40:01.129  INFO 81852 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 18:40:02.435  INFO 81852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 18:40:02.452  INFO 81852 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 18:40:02.452  INFO 81852 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 18:40:02.550  INFO 81852 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 18:40:02.551  INFO 81852 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2479 ms
2022-09-07 18:40:02.715  INFO 81852 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 18:40:03.109  INFO 81852 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 18:40:03.170  INFO 81852 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 18:40:03.211  INFO 81852 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 18:40:03.344  INFO 81852 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 18:40:03.424  INFO 81852 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 18:40:03.554  INFO 81852 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 18:40:03.559  INFO 81852 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:40:03.693  WARN 81852 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 18:40:04.651  INFO 81852 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 18:40:04.697  INFO 81852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 18:40:04.714  INFO 81852 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.533 seconds (JVM running for 6.56)
2022-09-07 18:40:15.212  INFO 81852 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 18:40:15.213  INFO 81852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 18:40:15.216  INFO 81852 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2022-09-07 18:40:15.563 ERROR 81852 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.io.FileDescriptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1300) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:46) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:29) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1518) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1007) ~[jackson-databind-2.13.3.jar:2.13.3]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.writeInternal(AbstractGenericHttpMessageConverter.java:113) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writePart(FormHttpMessageConverter.java:541) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeParts(FormHttpMessageConverter.java:517) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeMultipart(FormHttpMessageConverter.java:497) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:369) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:156) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:991) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:68) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 18:47:47.501  INFO 81852 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:47:47.514  INFO 81852 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 18:47:47.561  INFO 81852 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 18:47:54.752  INFO 82662 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 82662 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 18:47:54.761  INFO 82662 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 18:47:55.092  INFO 82662 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 18:47:55.093  INFO 82662 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 18:47:56.061  INFO 82662 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:47:56.063  INFO 82662 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 18:47:56.081  INFO 82662 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.
2022-09-07 18:47:56.092  INFO 82662 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:47:56.093  INFO 82662 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 18:47:56.099  INFO 82662 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 18:47:56.921  INFO 82662 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 18:47:56.932  INFO 82662 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 18:47:56.932  INFO 82662 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 18:47:57.031  INFO 82662 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 18:47:57.032  INFO 82662 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1938 ms
2022-09-07 18:47:57.188  INFO 82662 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 18:47:57.563  INFO 82662 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 18:47:57.617  INFO 82662 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 18:47:57.649  INFO 82662 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 18:47:57.764  INFO 82662 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 18:47:57.850  INFO 82662 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 18:47:57.978  INFO 82662 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 18:47:57.985  INFO 82662 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:47:58.047  WARN 82662 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionEventListener' defined in file [/Users/leegangju/Downloads/github/catchvbackend/out/production/classes/com/catchvbackend/service/domain/TransactionEventListener.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-09-07 18:47:58.048  INFO 82662 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:47:58.052  INFO 82662 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 18:47:58.066  INFO 82662 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 18:47:58.071  INFO 82662 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-09-07 18:47:58.104  INFO 82662 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-07 18:47:58.128 ERROR 82662 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.catchvbackend.service.domain.TransactionEventListener required a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' that could not be found.


Action:

Consider defining a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' in your configuration.

2022-09-07 18:48:26.564  INFO 82722 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 82722 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 18:48:26.572  INFO 82722 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 18:48:26.865  INFO 82722 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 18:48:26.866  INFO 82722 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 18:48:27.778  INFO 82722 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:48:27.780  INFO 82722 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 18:48:27.800  INFO 82722 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.
2022-09-07 18:48:27.810  INFO 82722 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 18:48:27.811  INFO 82722 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 18:48:27.817  INFO 82722 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2022-09-07 18:48:28.547  INFO 82722 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 18:48:28.557  INFO 82722 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 18:48:28.558  INFO 82722 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 18:48:28.652  INFO 82722 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 18:48:28.657  INFO 82722 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1791 ms
2022-09-07 18:48:28.812  INFO 82722 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 18:48:29.172  INFO 82722 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 18:48:29.226  INFO 82722 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 18:48:29.260  INFO 82722 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 18:48:29.384  INFO 82722 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 18:48:29.471  INFO 82722 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 18:48:29.601  INFO 82722 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 18:48:29.607  INFO 82722 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 18:48:29.720  WARN 82722 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 18:48:30.828  INFO 82722 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 18:48:30.880  INFO 82722 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 18:48:30.904  INFO 82722 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 4.804 seconds (JVM running for 5.86)
2022-09-07 18:48:48.741  INFO 82722 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 18:48:48.742  INFO 82722 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 18:48:48.744  INFO 82722 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-09-07 18:48:49.041 ERROR 82722 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.io.FileDescriptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1300) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:46) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:29) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1518) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1007) ~[jackson-databind-2.13.3.jar:2.13.3]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.writeInternal(AbstractGenericHttpMessageConverter.java:113) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writePart(FormHttpMessageConverter.java:541) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeParts(FormHttpMessageConverter.java:517) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeMultipart(FormHttpMessageConverter.java:497) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:369) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:156) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:991) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:68) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 19:50:59.721  INFO 82722 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:50:59.737  INFO 82722 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:50:59.766  INFO 82722 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:51:10.160  INFO 88611 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 88611 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:51:10.166  INFO 88611 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:51:10.496  INFO 88611 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:51:10.496  INFO 88611 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:51:11.507  INFO 88611 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:51:11.508  INFO 88611 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:51:11.527  INFO 88611 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:51:11.537  INFO 88611 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:51:11.538  INFO 88611 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:51:11.544  INFO 88611 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2022-09-07 19:51:12.352  INFO 88611 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:51:12.362  INFO 88611 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:51:12.362  INFO 88611 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:51:12.445  INFO 88611 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:51:12.446  INFO 88611 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1950 ms
2022-09-07 19:51:12.610  INFO 88611 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:51:13.062  INFO 88611 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:51:13.118  INFO 88611 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:51:13.152  INFO 88611 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:51:13.269  INFO 88611 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:51:13.354  INFO 88611 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:51:13.487  INFO 88611 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:51:13.492  INFO 88611 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:51:13.574  WARN 88611 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionEventListener' defined in file [/Users/leegangju/Downloads/github/catchvbackend/out/production/classes/com/catchvbackend/service/domain/TransactionEventListener.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-09-07 19:51:13.574  INFO 88611 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:51:13.579  INFO 88611 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:51:13.594  INFO 88611 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:51:13.598  INFO 88611 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-09-07 19:51:13.615  INFO 88611 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-07 19:51:13.637 ERROR 88611 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.catchvbackend.service.domain.TransactionEventListener required a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' that could not be found.


Action:

Consider defining a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' in your configuration.

2022-09-07 19:52:48.380  INFO 88788 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 88788 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:52:48.384  INFO 88788 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:52:48.706  INFO 88788 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:52:48.706  INFO 88788 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:52:49.671  INFO 88788 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:52:49.673  INFO 88788 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:52:49.702  INFO 88788 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:52:49.719  INFO 88788 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:52:49.721  INFO 88788 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:52:49.730  INFO 88788 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 JPA repository interfaces.
2022-09-07 19:52:50.581  INFO 88788 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:52:50.591  INFO 88788 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:52:50.592  INFO 88788 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:52:50.685  INFO 88788 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:52:50.686  INFO 88788 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1979 ms
2022-09-07 19:52:50.849  INFO 88788 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:52:51.260  INFO 88788 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:52:51.313  INFO 88788 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:52:51.346  INFO 88788 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:52:51.471  INFO 88788 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:52:51.551  INFO 88788 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:52:51.675  INFO 88788 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:52:51.682  INFO 88788 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:52:51.755  WARN 88788 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionEventListener' defined in file [/Users/leegangju/Downloads/github/catchvbackend/out/production/classes/com/catchvbackend/service/domain/TransactionEventListener.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-09-07 19:52:51.756  INFO 88788 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:52:51.759  INFO 88788 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:52:51.789  INFO 88788 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:52:51.795  INFO 88788 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-09-07 19:52:51.815  INFO 88788 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-07 19:52:51.838 ERROR 88788 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.catchvbackend.service.domain.TransactionEventListener required a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' that could not be found.


Action:

Consider defining a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' in your configuration.

2022-09-07 19:53:34.564  INFO 88883 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 88883 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:53:34.565  INFO 88883 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:53:34.895  INFO 88883 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:53:34.896  INFO 88883 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:53:35.820  INFO 88883 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:53:35.821  INFO 88883 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:53:35.839  INFO 88883 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:53:35.850  INFO 88883 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:53:35.851  INFO 88883 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:53:35.857  INFO 88883 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2022-09-07 19:53:36.593  INFO 88883 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:53:36.604  INFO 88883 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:53:36.604  INFO 88883 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:53:36.683  INFO 88883 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:53:36.684  INFO 88883 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1788 ms
2022-09-07 19:53:36.843  INFO 88883 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:53:37.214  INFO 88883 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:53:37.266  INFO 88883 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:53:37.300  INFO 88883 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:53:37.416  INFO 88883 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:53:37.503  INFO 88883 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:53:37.629  INFO 88883 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:53:37.635  INFO 88883 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:53:37.718  WARN 88883 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionEventListener' defined in file [/Users/leegangju/Downloads/github/catchvbackend/out/production/classes/com/catchvbackend/service/domain/TransactionEventListener.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-09-07 19:53:37.718  INFO 88883 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:53:37.721  INFO 88883 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:53:37.736  INFO 88883 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:53:37.739  INFO 88883 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-09-07 19:53:37.756  INFO 88883 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-07 19:53:37.778 ERROR 88883 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.catchvbackend.service.domain.TransactionEventListener required a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' that could not be found.


Action:

Consider defining a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' in your configuration.

2022-09-07 19:55:00.823  INFO 89054 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 89054 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:55:00.836  INFO 89054 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:55:01.185  INFO 89054 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:55:01.185  INFO 89054 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:55:02.177  INFO 89054 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:55:02.178  INFO 89054 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:55:02.199  INFO 89054 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:55:02.212  INFO 89054 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:55:02.212  INFO 89054 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:55:02.218  INFO 89054 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 19:55:03.024  INFO 89054 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:55:03.033  INFO 89054 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:55:03.034  INFO 89054 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:55:03.126  INFO 89054 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:55:03.127  INFO 89054 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1942 ms
2022-09-07 19:55:03.284  INFO 89054 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:55:03.679  INFO 89054 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:55:03.734  INFO 89054 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:55:03.769  INFO 89054 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:55:03.887  INFO 89054 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:55:03.972  INFO 89054 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:55:04.101  INFO 89054 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:55:04.107  INFO 89054 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:55:04.197  WARN 89054 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionEventListener' defined in file [/Users/leegangju/Downloads/github/catchvbackend/out/production/classes/com/catchvbackend/service/domain/TransactionEventListener.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-09-07 19:55:04.197  INFO 89054 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:55:04.202  INFO 89054 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:55:04.239  INFO 89054 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:55:04.244  INFO 89054 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-09-07 19:55:04.264  INFO 89054 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-07 19:55:04.284 ERROR 89054 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.catchvbackend.service.domain.TransactionEventListener required a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' that could not be found.


Action:

Consider defining a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' in your configuration.

2022-09-07 19:55:26.369  INFO 89104 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 89104 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:55:26.373  INFO 89104 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:55:26.753  INFO 89104 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:55:26.754  INFO 89104 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:55:27.807  INFO 89104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:55:27.809  INFO 89104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:55:27.829  INFO 89104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:55:27.840  INFO 89104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:55:27.841  INFO 89104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:55:27.848  INFO 89104 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2022-09-07 19:55:28.669  INFO 89104 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:55:28.679  INFO 89104 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:55:28.679  INFO 89104 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:55:28.757  INFO 89104 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:55:28.758  INFO 89104 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2003 ms
2022-09-07 19:55:28.932  INFO 89104 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:55:29.332  INFO 89104 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:55:29.390  INFO 89104 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:55:29.425  INFO 89104 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:55:29.547  INFO 89104 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:55:29.633  INFO 89104 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:55:29.770  INFO 89104 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:55:29.775  INFO 89104 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:55:29.855  WARN 89104 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionEventScheduler' defined in file [/Users/leegangju/Downloads/github/catchvbackend/out/production/classes/com/catchvbackend/service/domain/TransactionEventScheduler.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-09-07 19:55:29.855  INFO 89104 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:55:29.859  INFO 89104 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:55:29.874  INFO 89104 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:55:29.878  INFO 89104 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-09-07 19:55:29.904  INFO 89104 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-09-07 19:55:29.927 ERROR 89104 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.catchvbackend.service.domain.TransactionEventScheduler required a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' that could not be found.


Action:

Consider defining a bean of type 'com.catchvbackend.service.domain.TransactionEventQueue' in your configuration.

2022-09-07 19:55:50.228  INFO 89164 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 89164 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:55:50.241  INFO 89164 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:55:50.598  INFO 89164 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:55:50.598  INFO 89164 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:55:51.622  INFO 89164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:55:51.624  INFO 89164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:55:51.644  INFO 89164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:55:51.654  INFO 89164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:55:51.655  INFO 89164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:55:51.661  INFO 89164 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 19:55:52.452  INFO 89164 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:55:52.463  INFO 89164 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:55:52.463  INFO 89164 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:55:52.550  INFO 89164 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:55:52.552  INFO 89164 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1953 ms
2022-09-07 19:55:52.726  INFO 89164 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:55:53.118  INFO 89164 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:55:53.183  INFO 89164 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:55:53.225  INFO 89164 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:55:53.355  INFO 89164 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:55:53.444  INFO 89164 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:55:53.587  INFO 89164 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:55:53.594  INFO 89164 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:55:53.725  WARN 89164 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 19:55:54.812  INFO 89164 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 19:55:54.872  INFO 89164 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 19:55:54.895  INFO 89164 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.135 seconds (JVM running for 6.429)
2022-09-07 19:56:16.308  INFO 89164 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 19:56:16.309  INFO 89164 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 19:56:16.314  INFO 89164 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2022-09-07 19:56:16.508 ERROR 89164 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.io.FileDescriptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile["inputStream"]->java.io.FileInputStream["fd"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1300) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:400) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:46) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:29) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1518) ~[jackson-databind-2.13.3.jar:2.13.3]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1007) ~[jackson-databind-2.13.3.jar:2.13.3]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:456) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.writeInternal(AbstractGenericHttpMessageConverter.java:113) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writePart(FormHttpMessageConverter.java:541) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeParts(FormHttpMessageConverter.java:517) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.writeMultipart(FormHttpMessageConverter.java:497) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:369) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.http.converter.FormHttpMessageConverter.write(FormHttpMessageConverter.java:156) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:991) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:70) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 19:58:07.376  INFO 89164 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:58:07.393  INFO 89164 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:58:07.426  INFO 89164 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 19:58:15.313  INFO 89511 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 89511 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 19:58:15.317  INFO 89511 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 19:58:15.623  INFO 89511 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 19:58:15.623  INFO 89511 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 19:58:16.618  INFO 89511 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:58:16.619  INFO 89511 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 19:58:16.637  INFO 89511 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.
2022-09-07 19:58:16.647  INFO 89511 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 19:58:16.647  INFO 89511 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 19:58:16.653  INFO 89511 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 19:58:17.499  INFO 89511 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 19:58:17.511  INFO 89511 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 19:58:17.511  INFO 89511 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 19:58:17.598  INFO 89511 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 19:58:17.600  INFO 89511 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1976 ms
2022-09-07 19:58:17.769  INFO 89511 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 19:58:18.167  INFO 89511 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 19:58:18.228  INFO 89511 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 19:58:18.267  INFO 89511 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 19:58:18.387  INFO 89511 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 19:58:18.473  INFO 89511 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 19:58:18.609  INFO 89511 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 19:58:18.614  INFO 89511 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:58:18.748  WARN 89511 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 19:58:19.908  INFO 89511 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 19:58:19.955  INFO 89511 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 19:58:19.976  INFO 89511 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.097 seconds (JVM running for 6.425)
2022-09-07 19:58:31.275  INFO 89511 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 19:58:31.276  INFO 89511 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 19:58:31.284  INFO 89511 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2022-09-07 19:58:31.641  INFO 89511 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 10:58:31 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 19:59:52.825  INFO 89511 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 19:59:52.839  INFO 89511 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 19:59:52.896  INFO 89511 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:00:00.804  INFO 89706 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 89706 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:00:00.814  INFO 89706 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:00:01.162  INFO 89706 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:00:01.162  INFO 89706 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:00:02.207  INFO 89706 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:00:02.209  INFO 89706 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:00:02.230  INFO 89706 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:00:02.244  INFO 89706 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:00:02.245  INFO 89706 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:00:02.251  INFO 89706 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:00:03.144  INFO 89706 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:00:03.157  INFO 89706 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:00:03.157  INFO 89706 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:00:03.600  INFO 89706 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:00:03.630  INFO 89706 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2468 ms
2022-09-07 20:00:03.911  INFO 89706 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:00:04.479  INFO 89706 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:00:04.540  INFO 89706 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:00:04.577  INFO 89706 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:00:04.721  INFO 89706 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:00:04.821  INFO 89706 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:00:04.962  INFO 89706 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:00:04.969  INFO 89706 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:00:05.106  WARN 89706 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:00:06.217  INFO 89706 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:00:06.264  INFO 89706 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:00:06.286  INFO 89706 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.942 seconds (JVM running for 7.304)
2022-09-07 20:00:10.529  INFO 89706 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:00:10.530  INFO 89706 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:00:10.534  INFO 89706 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 20:00:10.855  INFO 89706 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:00:10 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:01:20.502  INFO 89706 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:01:20.515  INFO 89706 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:01:20.538  INFO 89706 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:01:28.838  INFO 89848 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 89848 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:01:28.842  INFO 89848 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:01:29.184  INFO 89848 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:01:29.184  INFO 89848 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:01:30.196  INFO 89848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:01:30.198  INFO 89848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:01:30.218  INFO 89848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:01:30.231  INFO 89848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:01:30.232  INFO 89848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:01:30.237  INFO 89848 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:01:31.054  INFO 89848 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:01:31.062  INFO 89848 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:01:31.063  INFO 89848 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:01:31.151  INFO 89848 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:01:31.153  INFO 89848 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1968 ms
2022-09-07 20:01:31.309  INFO 89848 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:01:31.698  INFO 89848 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:01:31.750  INFO 89848 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:01:31.784  INFO 89848 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:01:31.904  INFO 89848 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:01:31.997  INFO 89848 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:01:32.138  INFO 89848 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:01:32.144  INFO 89848 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:01:32.288  WARN 89848 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:01:33.476  INFO 89848 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:01:33.524  INFO 89848 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:01:33.546  INFO 89848 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.171 seconds (JVM running for 6.318)
2022-09-07 20:01:47.215  INFO 89848 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:01:47.216  INFO 89848 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:01:47.220  INFO 89848 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 20:01:47.536  INFO 89848 --- [http-nio-8080-exec-2] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:01:47 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:03:17.098  INFO 89848 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:03:17.109  INFO 89848 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:03:17.133  INFO 89848 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:03:23.739  INFO 90029 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 90029 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:03:23.743  INFO 90029 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:03:24.021  INFO 90029 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:03:24.022  INFO 90029 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:03:25.102  INFO 90029 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:03:25.105  INFO 90029 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:03:25.162  INFO 90029 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:03:25.235  INFO 90029 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:03:25.247  INFO 90029 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:03:25.280  INFO 90029 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:03:26.360  INFO 90029 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:03:26.369  INFO 90029 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:03:26.370  INFO 90029 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:03:26.457  INFO 90029 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:03:26.461  INFO 90029 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2439 ms
2022-09-07 20:03:26.658  INFO 90029 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:03:27.366  INFO 90029 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:03:27.424  INFO 90029 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:03:27.460  INFO 90029 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:03:27.589  INFO 90029 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:03:27.672  INFO 90029 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:03:27.813  INFO 90029 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:03:27.819  INFO 90029 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:03:27.972  WARN 90029 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:03:29.117  INFO 90029 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:03:29.177  INFO 90029 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:03:29.199  INFO 90029 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.873 seconds (JVM running for 7.158)
2022-09-07 20:03:55.357  INFO 90029 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:03:55.358  INFO 90029 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:03:55.362  INFO 90029 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 20:03:55.702  INFO 90029 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:03:55 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:05:03.638 ERROR 90029 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>TypeError: 'bytes' object is not callable<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "kXv35k3CyHVjJf4TcySA";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>TypeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">TypeError: &#39;bytes&#39; object is not callable<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10885640960"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886660832"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886660944"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672592"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672704"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672816"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672928"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886673040"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886673152"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886673264"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886675840"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886675952"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">63</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span>class Upload(Resource):</pre><EOL><pre class="line before"><span class="ws">    </span># def get(self, user_id):</pre><EOL><pre class="line before"><span class="ws">    </span>#     return {&#39;data&#39;: &#39;hello world!&#39;}</pre><EOL><pre class="line before"><span class="ws">    </span>def post(self, user_id):</pre><EOL><pre class="line current"><span class="ws">        </span>print(request.data(&#39;files&#39;))</pre><EOL><pre class="line after"><span class="ws">        </span>if &#34;files&#34; not in request.files:</pre><EOL><pre class="line after"><span class="ws">            </span>return {&#34;message&#34;: f&#34;No file part:{user_id}&#34;}</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>app.logger.info(request.files)</pre><EOL><pre class="line after"><span class="ws">        </span>files = request.files.getlist(&#34;files&#34;)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>TypeError: &#39;bytes&#39; object is not callable<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 63, in post<EOL>    print(request.data(&#39;files&#39;))<EOL>TypeError: &#39;bytes&#39; object is not callable<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 63, in post<EOL>    print(request.data('files'))<EOL>TypeError: 'bytes' object is not callable<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>TypeError: 'bytes' object is not callable<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "kXv35k3CyHVjJf4TcySA";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>TypeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">TypeError: &#39;bytes&#39; object is not callable<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10885640960"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886660832"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886660944"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672592"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672704"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672816"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886672928"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886673040"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886673152"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886673264"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886675840"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10886675952"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">63</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span>class Upload(Resource):</pre><EOL><pre class="line before"><span class="ws">    </span># def get(self, user_id):</pre><EOL><pre class="line before"><span class="ws">    </span>#     return {&#39;data&#39;: &#39;hello world!&#39;}</pre><EOL><pre class="line before"><span class="ws">    </span>def post(self, user_id):</pre><EOL><pre class="line current"><span class="ws">        </span>print(request.data(&#39;files&#39;))</pre><EOL><pre class="line after"><span class="ws">        </span>if &#34;files&#34; not in request.files:</pre><EOL><pre class="line after"><span class="ws">            </span>return {&#34;message&#34;: f&#34;No file part:{user_id}&#34;}</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>app.logger.info(request.files)</pre><EOL><pre class="line after"><span class="ws">        </span>files = request.files.getlist(&#34;files&#34;)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>TypeError: &#39;bytes&#39; object is not callable<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 63, in post<EOL>    print(request.data(&#39;files&#39;))<EOL>TypeError: &#39;bytes&#39; object is not callable<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 63, in post<EOL>    print(request.data('files'))<EOL>TypeError: 'bytes' object is not callable<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:07:58.966  INFO 90029 --- [http-nio-8080-exec-5] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:07:58 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:10:02.903 ERROR 90029 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"] with root cause

org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:11:15.434  INFO 90029 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:11:15.449  INFO 90029 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:11:15.471  INFO 90029 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:11:35.913  INFO 90806 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 90806 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:11:35.921  INFO 90806 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:11:36.238  INFO 90806 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:11:36.238  INFO 90806 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:11:37.334  INFO 90806 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:11:37.335  INFO 90806 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:11:37.356  INFO 90806 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:11:37.370  INFO 90806 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:11:37.371  INFO 90806 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:11:37.376  INFO 90806 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:11:38.375  INFO 90806 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:11:38.398  INFO 90806 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:11:38.399  INFO 90806 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:11:38.713  INFO 90806 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:11:38.716  INFO 90806 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2476 ms
2022-09-07 20:11:38.936  INFO 90806 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:11:39.342  INFO 90806 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:11:39.396  INFO 90806 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:11:39.433  INFO 90806 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:11:39.559  INFO 90806 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:11:39.647  INFO 90806 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:11:39.779  INFO 90806 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:11:39.786  INFO 90806 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:11:39.921  WARN 90806 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:11:40.980  INFO 90806 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:11:41.025  INFO 90806 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:11:41.045  INFO 90806 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.58 seconds (JVM running for 6.755)
2022-09-07 20:11:46.359  INFO 90806 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:11:46.360  INFO 90806 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:11:46.362  INFO 90806 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-09-07 20:11:46.716  INFO 90806 --- [http-nio-8080-exec-1] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:11:46 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:13:15.383  INFO 90806 --- [http-nio-8080-exec-3] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:13:15 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:13:49.119  INFO 90806 --- [http-nio-8080-exec-4] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "No file part:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:13:49 GMT", Content-Type:"application/json", Content-Length:"50", Connection:"close"]>
2022-09-07 20:15:23.068  INFO 90806 --- [http-nio-8080-exec-6] c.c.s.controller.MainServiceController   : connect<200,{
    "message": "File list empty:jihun@jihun.com"
}
,[Server:"Werkzeug/2.2.2 Python/3.10.6", Date:"Wed, 07 Sep 2022 11:15:23 GMT", Content-Type:"application/json", Content-Length:"53", Connection:"close"]>
2022-09-07 20:17:05.138 ERROR 90806 --- [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "mEBU1XkKhL5XFFHannTt";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10931071888"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934239744"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934239856"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251504"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251616"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251728"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251840"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251952"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934252064"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934252176"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934254752"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934254864"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">79</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>file_path = os.path.join(app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>if not os.path.isdir(file_path):</pre><EOL><pre class="line before"><span class="ws">            </span>os.mkdir(file_path)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 79, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 79, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "mEBU1XkKhL5XFFHannTt";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10931071888"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934239744"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934239856"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251504"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251616"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251728"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251840"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934251952"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934252064"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934252176"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934254752"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10934254864"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">79</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>file_path = os.path.join(app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>if not os.path.isdir(file_path):</pre><EOL><pre class="line before"><span class="ws">            </span>os.mkdir(file_path)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 79, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 79, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:18:59.387 ERROR 90806 --- [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "kHvdob3yDP03B6Mg2jmI";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10901696832"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903257600"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903257712"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269360"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269472"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269584"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269696"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269808"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269920"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903270032"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903272608"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903272720"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">80</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>if not os.path.isdir(file_path):</pre><EOL><pre class="line before"><span class="ws">            </span>os.mkdir(file_path)</pre><EOL><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 80, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 80, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "kHvdob3yDP03B6Mg2jmI";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10901696832"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903257600"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903257712"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269360"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269472"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269584"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269696"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269808"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903269920"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903270032"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903272608"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10903272720"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">80</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>if not os.path.isdir(file_path):</pre><EOL><pre class="line before"><span class="ws">            </span>os.mkdir(file_path)</pre><EOL><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 80, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 80, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:23:03.226 ERROR 90806 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'name'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "JKDheTiJs4n7EFGPCQkZ";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;name&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-11173342880"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175150080"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175150192"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175161840"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175161952"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162064"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162176"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162288"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162400"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162512"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175165088"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175165200"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">78</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(app.config[&#34;UPLOAD_FOLDER&#34;])</pre><EOL><pre class="line before"><span class="ws">        </span>file_path = os.path.join(app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>if not os.path.isdir(file_path):</pre><EOL><pre class="line before"><span class="ws">            </span>os.mkdir(file_path)</pre><EOL><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line current"><span class="ws">        </span>print(files.name)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line after"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;name&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 78, in post<EOL>    print(files.name)<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;name&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 78, in post<EOL>    print(files.name)<EOL>AttributeError: 'list' object has no attribute 'name'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'name'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "JKDheTiJs4n7EFGPCQkZ";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;name&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-11173342880"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175150080"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175150192"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175161840"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175161952"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162064"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162176"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162288"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162400"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175162512"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175165088"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11175165200"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">78</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(app.config[&#34;UPLOAD_FOLDER&#34;])</pre><EOL><pre class="line before"><span class="ws">        </span>file_path = os.path.join(app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>if not os.path.isdir(file_path):</pre><EOL><pre class="line before"><span class="ws">            </span>os.mkdir(file_path)</pre><EOL><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line current"><span class="ws">        </span>print(files.name)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line after"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;name&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 78, in post<EOL>    print(files.name)<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;name&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 78, in post<EOL>    print(files.name)<EOL>AttributeError: 'list' object has no attribute 'name'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:24:05.229 ERROR 90806 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "t1Q2YVntB7X6XzoBxYHI";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10885574416"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888299008"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888299120"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888310768"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888310880"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888310992"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311104"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311216"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311328"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311440"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888314016"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888314128"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">82</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>for i in range(len(files)):</pre><EOL><pre class="line before"><span class="ws">            </span>app.logger.info(files[i])</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "t1Q2YVntB7X6XzoBxYHI";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10885574416"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888299008"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888299120"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888310768"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888310880"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888310992"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311104"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311216"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311328"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888311440"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888314016"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888314128"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">82</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>for i in range(len(files)):</pre><EOL><pre class="line before"><span class="ws">            </span>app.logger.info(files[i])</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:24:38.328 ERROR 90806 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "t1Q2YVntB7X6XzoBxYHI";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10888314352"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462400"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462512"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462624"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462736"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462848"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462960"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463072"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463184"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463296"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463408"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463520"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">82</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>for i in range(len(files)):</pre><EOL><pre class="line before"><span class="ws">            </span>app.logger.info(files[i])</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "t1Q2YVntB7X6XzoBxYHI";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10888314352"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462400"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462512"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462624"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462736"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462848"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888462960"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463072"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463184"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463296"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463408"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10888463520"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">82</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>for i in range(len(files)):</pre><EOL><pre class="line before"><span class="ws">            </span>app.logger.info(files[i])</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'str' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:74) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:25:09.431  WARN 90806 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Retrograde clock change detected (housekeeper delta=29s868ms), soft-evicting connections from pool.
2022-09-07 20:25:55.607  INFO 90806 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:25:55.621  INFO 90806 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:25:55.636  INFO 90806 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:26:03.822  INFO 92181 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 92181 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:26:03.826  INFO 92181 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:26:04.131  INFO 92181 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:26:04.131  INFO 92181 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:26:05.265  INFO 92181 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:26:05.267  INFO 92181 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:26:05.293  INFO 92181 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:26:05.310  INFO 92181 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:26:05.313  INFO 92181 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:26:05.326  INFO 92181 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
2022-09-07 20:26:06.337  INFO 92181 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:26:06.347  INFO 92181 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:26:06.348  INFO 92181 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:26:06.432  INFO 92181 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:26:06.434  INFO 92181 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2302 ms
2022-09-07 20:26:06.579  INFO 92181 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:26:07.020  INFO 92181 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:26:07.072  INFO 92181 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:26:07.104  INFO 92181 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:26:07.216  INFO 92181 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:26:07.317  INFO 92181 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:26:07.463  INFO 92181 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:26:07.470  INFO 92181 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:26:07.650  WARN 92181 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:26:08.730  INFO 92181 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:26:08.781  INFO 92181 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:26:08.801  INFO 92181 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.449 seconds (JVM running for 6.854)
2022-09-07 20:26:20.812  INFO 92181 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:26:20.813  INFO 92181 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:26:20.816  INFO 92181 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2022-09-07 20:26:21.069 ERROR 92181 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.util.List.add(Object)" because "list" is null] with root cause

java.lang.NullPointerException: Cannot invoke "java.util.List.add(Object)" because "list" is null
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:69) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:27:17.066  INFO 92181 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:27:17.077  INFO 92181 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:27:17.113  INFO 92181 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:27:24.985  INFO 92309 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 92309 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:27:24.989  INFO 92309 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:27:25.338  INFO 92309 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:27:25.338  INFO 92309 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:27:26.318  INFO 92309 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:27:26.320  INFO 92309 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:27:26.337  INFO 92309 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:27:26.349  INFO 92309 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:27:26.350  INFO 92309 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:27:26.355  INFO 92309 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:27:27.243  INFO 92309 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:27:27.254  INFO 92309 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:27:27.254  INFO 92309 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:27:27.344  INFO 92309 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:27:27.345  INFO 92309 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2006 ms
2022-09-07 20:27:27.508  INFO 92309 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:27:27.889  INFO 92309 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:27:27.949  INFO 92309 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:27:27.986  INFO 92309 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:27:28.112  INFO 92309 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:27:28.189  INFO 92309 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:27:28.313  INFO 92309 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:27:28.321  INFO 92309 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:27:28.469  WARN 92309 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:27:29.477  INFO 92309 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:27:29.521  INFO 92309 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:27:29.539  INFO 92309 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.034 seconds (JVM running for 6.424)
2022-09-07 20:27:42.062  INFO 92309 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:27:42.063  INFO 92309 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:27:42.065  INFO 92309 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2022-09-07 20:27:42.396 ERROR 92309 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "ktpUBO3QaWDssKVJ1ebs";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-11132660624"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133469184"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133469296"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133480944"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481056"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481168"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481280"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481392"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481504"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481616"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133484192"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133484304"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">82</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>for i in range(len(files)):</pre><EOL><pre class="line before"><span class="ws">            </span>app.logger.info(files[i])</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'list' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'filename'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "ktpUBO3QaWDssKVJ1ebs";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;filename&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-11132660624"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133469184"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133469296"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133480944"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481056"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481168"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481280"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481392"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481504"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133481616"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133484192"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11133484304"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">82</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>print(&#34;json2&#34;)</pre><EOL><pre class="line before"><span class="ws">        </span>for i in range(len(files)):</pre><EOL><pre class="line before"><span class="ws">            </span>app.logger.info(files[i])</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for file in files:</pre><EOL><pre class="line current"><span class="ws">            </span>if file and allowed_file(file.filename):</pre><EOL><pre class="line after"><span class="ws">                </span>original_filename = file.filename</pre><EOL><pre class="line after"><span class="ws">                </span>extension = original_filename.rsplit(&#34;.&#34;, 1)[1].lower()</pre><EOL><pre class="line after"><span class="ws">                </span>filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line after"><span class="ws">                </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line after"><span class="ws">                </span>file_path = os.path.join(</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;filename&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;filename&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 82, in post<EOL>    if file and allowed_file(file.filename):<EOL>AttributeError: 'list' object has no attribute 'filename'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:35:08.381 ERROR 92309 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'save'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "r7W6TNdRLJlIsREIADTE";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-6289682864"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300566128"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300566240"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300577888"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578000"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578112"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578224"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578336"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578448"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578560"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300581136"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300581248"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">91</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line before"><span class="ws">            </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line before"><span class="ws">            </span>file_path = os.path.join(</pre><EOL><pre class="line before"><span class="ws">                </span>app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line current"><span class="ws">            </span>file.save(file_path)</pre><EOL><pre class="line after"><span class="ws">            </span>file_list = os.path.join(UPLOAD_FOLDER, &#34;files.json&#34;)</pre><EOL><pre class="line after"><span class="ws">            </span>files = _get_files()</pre><EOL><pre class="line after"><span class="ws">            </span># files[filename] = original_filename</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>with open(file_list, &#34;w&#34;) as fh:</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: 'list' object has no attribute 'save'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'save'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "r7W6TNdRLJlIsREIADTE";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-6289682864"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300566128"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300566240"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300577888"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578000"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578112"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578224"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578336"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578448"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300578560"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300581136"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300581248"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">91</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line before"><span class="ws">            </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line before"><span class="ws">            </span>file_path = os.path.join(</pre><EOL><pre class="line before"><span class="ws">                </span>app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line current"><span class="ws">            </span>file.save(file_path)</pre><EOL><pre class="line after"><span class="ws">            </span>file_list = os.path.join(UPLOAD_FOLDER, &#34;files.json&#34;)</pre><EOL><pre class="line after"><span class="ws">            </span>files = _get_files()</pre><EOL><pre class="line after"><span class="ws">            </span># files[filename] = original_filename</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>with open(file_list, &#34;w&#34;) as fh:</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: 'list' object has no attribute 'save'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:36:41.167  INFO 92309 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:36:41.188  INFO 92309 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:36:41.248  INFO 92309 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:36:52.329  INFO 93113 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 93113 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:36:52.337  INFO 93113 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:36:52.659  INFO 93113 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:36:52.660  INFO 93113 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:36:53.610  INFO 93113 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:36:53.612  INFO 93113 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:36:53.632  INFO 93113 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:36:53.644  INFO 93113 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:36:53.645  INFO 93113 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:36:53.651  INFO 93113 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:36:54.429  INFO 93113 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:36:54.439  INFO 93113 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:36:54.439  INFO 93113 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:36:54.527  INFO 93113 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:36:54.529  INFO 93113 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1868 ms
2022-09-07 20:36:54.725  INFO 93113 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:36:55.147  INFO 93113 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:36:55.202  INFO 93113 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:36:55.236  INFO 93113 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:36:55.361  INFO 93113 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:36:55.444  INFO 93113 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:36:55.583  INFO 93113 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:36:55.590  INFO 93113 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:36:55.714  WARN 93113 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:36:56.700  INFO 93113 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:36:56.741  INFO 93113 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:36:56.760  INFO 93113 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 4.872 seconds (JVM running for 6.187)
2022-09-07 20:37:06.322  INFO 93113 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:37:06.325  INFO 93113 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:37:06.342  INFO 93113 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2022-09-07 20:37:06.761 ERROR 93113 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'save'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "r7W6TNdRLJlIsREIADTE";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-6300713024"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713136"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713248"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713360"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713472"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713584"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713696"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713808"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713920"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300714032"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300714144"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300714256"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">91</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line before"><span class="ws">            </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line before"><span class="ws">            </span>file_path = os.path.join(</pre><EOL><pre class="line before"><span class="ws">                </span>app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line current"><span class="ws">            </span>file.save(file_path)</pre><EOL><pre class="line after"><span class="ws">            </span>file_list = os.path.join(UPLOAD_FOLDER, &#34;files.json&#34;)</pre><EOL><pre class="line after"><span class="ws">            </span>files = _get_files()</pre><EOL><pre class="line after"><span class="ws">            </span># files[filename] = original_filename</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>with open(file_list, &#34;w&#34;) as fh:</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: 'list' object has no attribute 'save'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'list' object has no attribute 'save'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "r7W6TNdRLJlIsREIADTE";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-6300713024"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713136"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713248"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713360"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713472"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713584"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713696"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713808"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300713920"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300714032"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300714144"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-6300714256"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">91</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># filename = str(uuid.uuid1()) + &#34;.&#34; + extension</pre><EOL><pre class="line before"><span class="ws">            </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line before"><span class="ws">            </span>file_path = os.path.join(</pre><EOL><pre class="line before"><span class="ws">                </span>app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line current"><span class="ws">            </span>file.save(file_path)</pre><EOL><pre class="line after"><span class="ws">            </span>file_list = os.path.join(UPLOAD_FOLDER, &#34;files.json&#34;)</pre><EOL><pre class="line after"><span class="ws">            </span>files = _get_files()</pre><EOL><pre class="line after"><span class="ws">            </span># files[filename] = original_filename</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>with open(file_list, &#34;w&#34;) as fh:</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: &#39;list&#39; object has no attribute &#39;save&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 91, in post<EOL>    file.save(file_path)<EOL>AttributeError: 'list' object has no attribute 'save'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:38:46.348  INFO 93113 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:38:46.363  INFO 93113 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:38:46.399  INFO 93113 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:39:20.379  INFO 93363 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 93363 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:39:20.389  INFO 93363 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:39:20.716  INFO 93363 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:39:20.716  INFO 93363 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:39:21.712  INFO 93363 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:39:21.714  INFO 93363 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:39:21.733  INFO 93363 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:39:21.745  INFO 93363 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:39:21.746  INFO 93363 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:39:21.752  INFO 93363 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:39:22.533  INFO 93363 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:39:22.543  INFO 93363 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:39:22.543  INFO 93363 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:39:22.631  INFO 93363 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:39:22.633  INFO 93363 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1916 ms
2022-09-07 20:39:22.778  INFO 93363 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:39:23.181  INFO 93363 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:39:23.242  INFO 93363 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:39:23.281  INFO 93363 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:39:23.417  INFO 93363 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:39:23.534  INFO 93363 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:39:23.674  INFO 93363 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:39:23.680  INFO 93363 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:39:23.861  WARN 93363 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:39:24.944  INFO 93363 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:39:24.996  INFO 93363 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:39:25.018  INFO 93363 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.085 seconds (JVM running for 6.409)
2022-09-07 20:39:44.264  INFO 93363 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:39:44.265  INFO 93363 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:39:44.269  INFO 93363 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2022-09-07 20:39:44.622 ERROR 93363 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'save'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "K3XDVnVA0CK0TdTGjOyp";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;save&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-11058097152"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061101168"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061101280"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061112928"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113040"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113152"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113264"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113376"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113488"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113600"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061116176"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061116288"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">92</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line before"><span class="ws">            </span>file_path = os.path.join(</pre><EOL><pre class="line before"><span class="ws">                </span>app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">            </span>file[0].save(file_path)</pre><EOL><pre class="line after"><span class="ws">            </span>file_list = os.path.join(UPLOAD_FOLDER, &#34;files.json&#34;)</pre><EOL><pre class="line after"><span class="ws">            </span>files = _get_files()</pre><EOL><pre class="line after"><span class="ws">            </span># files[filename] = original_filename</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>with open(file_list, &#34;w&#34;) as fh:</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;save&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 92, in post<EOL>    file[0].save(file_path)<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;save&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 92, in post<EOL>    file[0].save(file_path)<EOL>AttributeError: 'str' object has no attribute 'save'<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>AttributeError: 'str' object has no attribute 'save'<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "K3XDVnVA0CK0TdTGjOyp";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>AttributeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;save&#39;<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-11058097152"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061101168"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061101280"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061112928"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113040"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113152"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113264"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113376"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113488"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061113600"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061116176"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-11061116288"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">92</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># filename = secure_filename(file.filename)</pre><EOL><pre class="line before"><span class="ws">            </span>file_path = os.path.join(</pre><EOL><pre class="line before"><span class="ws">                </span>app.config[&#34;UPLOAD_FOLDER&#34;], f&#34;{user_id}/&#34;</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">            </span>file[0].save(file_path)</pre><EOL><pre class="line after"><span class="ws">            </span>file_list = os.path.join(UPLOAD_FOLDER, &#34;files.json&#34;)</pre><EOL><pre class="line after"><span class="ws">            </span>files = _get_files()</pre><EOL><pre class="line after"><span class="ws">            </span># files[filename] = original_filename</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>with open(file_list, &#34;w&#34;) as fh:</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;save&#39;<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 92, in post<EOL>    file[0].save(file_path)<EOL>AttributeError: &#39;str&#39; object has no attribute &#39;save&#39;<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 92, in post<EOL>    file[0].save(file_path)<EOL>AttributeError: 'str' object has no attribute 'save'<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:42:58.499  INFO 93363 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:42:58.512  INFO 93363 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:42:58.541  INFO 93363 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:43:06.737  INFO 93757 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 93757 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:43:06.741  INFO 93757 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:43:07.098  INFO 93757 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:43:07.098  INFO 93757 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:43:08.091  INFO 93757 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:43:08.092  INFO 93757 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:43:08.112  INFO 93757 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:43:08.125  INFO 93757 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:43:08.126  INFO 93757 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:43:08.132  INFO 93757 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:43:09.031  INFO 93757 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:43:09.041  INFO 93757 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:43:09.042  INFO 93757 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:43:09.138  INFO 93757 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:43:09.140  INFO 93757 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2041 ms
2022-09-07 20:43:09.310  INFO 93757 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:43:09.805  INFO 93757 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:43:09.864  INFO 93757 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:43:09.901  INFO 93757 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:43:10.021  INFO 93757 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:43:10.100  INFO 93757 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:43:10.225  INFO 93757 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:43:10.232  INFO 93757 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:43:10.379  WARN 93757 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:43:11.557  INFO 93757 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:43:11.605  INFO 93757 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:43:11.631  INFO 93757 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 5.4 seconds (JVM running for 6.911)
2022-09-07 20:44:09.802  INFO 93757 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:44:09.815  INFO 93757 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-09-07 20:44:09.841  INFO 93757 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-09-07 20:44:17.056  INFO 93888 --- [restartedMain] c.c.CatchvbackendApplication             : Starting CatchvbackendApplication using Java 17.0.1 on MacBook-Pro.local with PID 93888 (/Users/leegangju/Downloads/github/catchvbackend/out/production/classes started by leegangju in /Users/leegangju/Downloads/github/catchvbackend)
2022-09-07 20:44:17.060  INFO 93888 --- [restartedMain] c.c.CatchvbackendApplication             : No active profile set, falling back to 1 default profile: "default"
2022-09-07 20:44:17.365  INFO 93888 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-09-07 20:44:17.366  INFO 93888 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-09-07 20:44:18.351  INFO 93888 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:44:18.353  INFO 93888 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-07 20:44:18.376  INFO 93888 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 0 JDBC repository interfaces.
2022-09-07 20:44:18.391  INFO 93888 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-07 20:44:18.391  INFO 93888 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-07 20:44:18.398  INFO 93888 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2022-09-07 20:44:19.241  INFO 93888 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-09-07 20:44:19.251  INFO 93888 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-09-07 20:44:19.251  INFO 93888 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
2022-09-07 20:44:19.343  INFO 93888 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-09-07 20:44:19.344  INFO 93888 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1978 ms
2022-09-07 20:44:19.503  INFO 93888 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-07 20:44:19.896  INFO 93888 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-07 20:44:19.952  INFO 93888 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-07 20:44:19.986  INFO 93888 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-07 20:44:20.103  INFO 93888 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-07 20:44:20.184  INFO 93888 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2022-09-07 20:44:20.313  INFO 93888 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-07 20:44:20.319  INFO 93888 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-07 20:44:20.465  WARN 93888 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-09-07 20:44:21.474  INFO 93888 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-09-07 20:44:21.518  INFO 93888 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-09-07 20:44:21.541  INFO 93888 --- [restartedMain] c.c.CatchvbackendApplication             : Started CatchvbackendApplication in 4.928 seconds (JVM running for 6.079)
2022-09-07 20:44:31.986  INFO 93888 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-09-07 20:44:31.987  INFO 93888 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-09-07 20:44:31.990  INFO 93888 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2022-09-07 20:44:32.356 ERROR 93888 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"] with root cause

org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:47:27.034 ERROR 93888 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"] with root cause

org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:49:37.510 ERROR 93888 --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>TypeError: object of type 'generator' has no len()<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "vVovVlCe8GZRt22WWQhg";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>TypeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">TypeError: object of type &#39;generator&#39; has no len()<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10938724672"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940007360"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940007472"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019120"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019232"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019344"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019456"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019568"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019680"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019792"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940022368"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940022480"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">65</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span>class Upload(Resource):</pre><EOL><pre class="line before"><span class="ws">    </span># def get(self, user_id):</pre><EOL><pre class="line before"><span class="ws">    </span>#     return {&#39;data&#39;: &#39;hello world!&#39;}</pre><EOL><pre class="line before"><span class="ws">    </span>def post(self, user_id):</pre><EOL><pre class="line before"><span class="ws">        </span>testlist=request.form.lists()</pre><EOL><pre class="line current"><span class="ws">        </span>print(&#34;testlist len:&#34;, len(testlist), &#34;testlist[0]&#34;, testlist[0])</pre><EOL><pre class="line after"><span class="ws">        </span>print(request.json, &#34;json&#34;)</pre><EOL><pre class="line after"><span class="ws">        </span>if &#34;files&#34; not in request.json:</pre><EOL><pre class="line after"><span class="ws">            </span>return {&#34;message&#34;: f&#34;No file part:{user_id}&#34;}</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>files = request.json[&#34;files&#34;]</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>TypeError: object of type &#39;generator&#39; has no len()<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 65, in post<EOL>    print(&#34;testlist len:&#34;, len(testlist), &#34;testlist[0]&#34;, testlist[0])<EOL>TypeError: object of type &#39;generator&#39; has no len()<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 65, in post<EOL>    print("testlist len:", len(testlist), "testlist[0]", testlist[0])<EOL>TypeError: object of type 'generator' has no len()<EOL><EOL><EOL>--><EOL>"] with root cause

org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>TypeError: object of type 'generator' has no len()<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "vVovVlCe8GZRt22WWQhg";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>TypeError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">TypeError: object of type &#39;generator&#39; has no len()<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-10938724672"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2548</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940007360"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2528</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940007472"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019120"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">2525</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019232"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1822</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019344"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">271</em>,<EOL>      in <code class="function">error_router</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>if self._has_fr_route():</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>return self.handle_error(e)</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception:</pre><EOL><pre class="line before"><span class="ws">                </span>pass  # Fall through to original handler</pre><EOL><pre class="line current"><span class="ws">        </span>return original_handler(e)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def handle_error(self, e):</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Error handler for the API transforms a raised exception into a Flask</pre><EOL><pre class="line after"><span class="ws">        </span>response, with the appropriate HTTP status code and body.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019456"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1820</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019568"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py"</cite>,<EOL>      line <em class="line">1796</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019680"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">467</em>,<EOL>      in <code class="function">wrapper</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>:param resource: The resource as a flask view function</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>@wraps(resource)</pre><EOL><pre class="line before"><span class="ws">        </span>def wrapper(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">            </span>resp = resource(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws">            </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">                </span>return resp</pre><EOL><pre class="line after"><span class="ws">            </span>data, code, headers = unpack(resp)</pre><EOL><pre class="line after"><span class="ws">            </span>return self.make_response(data, code, headers=headers)</pre><EOL><pre class="line after"><span class="ws">        </span>return wrapper</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940019792"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py"</cite>,<EOL>      line <em class="line">107</em>,<EOL>      in <code class="function">view</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre><EOL><pre class="line before"><span class="ws">                </span>self = view.view_class(  # type: ignore[attr-defined]</pre><EOL><pre class="line before"><span class="ws">                    </span>*class_args, **class_kwargs</pre><EOL><pre class="line before"><span class="ws">                </span>)</pre><EOL><pre class="line current"><span class="ws">                </span>return current_app.ensure_sync(self.dispatch_request)(**kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws">            </span>self = cls(*class_args, **class_kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def view(**kwargs: t.Any) -&gt; ft.ResponseReturnValue:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940022368"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py"</cite>,<EOL>      line <em class="line">582</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>decorators = self.method_decorators</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>for decorator in decorators:</pre><EOL><pre class="line before"><span class="ws">            </span>meth = decorator(meth)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">        </span>resp = meth(*args, **kwargs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>if isinstance(resp, ResponseBase):  # There may be a better way to test</pre><EOL><pre class="line after"><span class="ws">            </span>return resp</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>representations = self.representations or OrderedDict()</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-10940022480"><EOL>  <h4>File <cite class="filename">"/Users/leegangju/Documents/GitHub/CleanData/src/app.py"</cite>,<EOL>      line <em class="line">65</em>,<EOL>      in <code class="function">post</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span>class Upload(Resource):</pre><EOL><pre class="line before"><span class="ws">    </span># def get(self, user_id):</pre><EOL><pre class="line before"><span class="ws">    </span>#     return {&#39;data&#39;: &#39;hello world!&#39;}</pre><EOL><pre class="line before"><span class="ws">    </span>def post(self, user_id):</pre><EOL><pre class="line before"><span class="ws">        </span>testlist=request.form.lists()</pre><EOL><pre class="line current"><span class="ws">        </span>print(&#34;testlist len:&#34;, len(testlist), &#34;testlist[0]&#34;, testlist[0])</pre><EOL><pre class="line after"><span class="ws">        </span>print(request.json, &#34;json&#34;)</pre><EOL><pre class="line after"><span class="ws">        </span>if &#34;files&#34; not in request.json:</pre><EOL><pre class="line after"><span class="ws">            </span>return {&#34;message&#34;: f&#34;No file part:{user_id}&#34;}</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span>files = request.json[&#34;files&#34;]</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>TypeError: object of type &#39;generator&#39; has no len()<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 271, in error_router<EOL>    return original_handler(e)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py&#34;, line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File &#34;/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py&#34;, line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File &#34;/Users/leegangju/Documents/GitHub/CleanData/src/app.py&#34;, line 65, in post<EOL>    print(&#34;testlist len:&#34;, len(testlist), &#34;testlist[0]&#34;, testlist[0])<EOL>TypeError: object of type &#39;generator&#39; has no len()<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 271, in error_router<EOL>    return original_handler(e)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 467, in wrapper<EOL>    resp = resource(*args, **kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask/views.py", line 107, in view<EOL>    return current_app.ensure_sync(self.dispatch_request)(**kwargs)<EOL>  File "/Users/leegangju/.conda/envs/CleanData/lib/python3.10/site-packages/flask_restful/__init__.py", line 582, in dispatch_request<EOL>    resp = meth(*args, **kwargs)<EOL>  File "/Users/leegangju/Documents/GitHub/CleanData/src/app.py", line 65, in post<EOL>    print("testlist len:", len(testlist), "testlist[0]", testlist[0])<EOL>TypeError: object of type 'generator' has no len()<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:51:56.754 ERROR 93888 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"] with root cause

org.springframework.web.client.HttpClientErrorException$BadRequest: 400 BAD REQUEST: "{<EOL>    "message": "Did not attempt to load JSON data because the request Content-Type was not 'application/json'."<EOL>}<EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468) ~[spring-web-5.3.22.jar:5.3.22]
	at com.catchvbackend.service.controller.MainServiceController.flaskApi(MainServiceController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.22.jar:5.3.22]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.65.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.22.jar:5.3.22]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.22.jar:5.3.22]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.65.jar:9.0.65]
	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]

2022-09-07 20:53:46.919  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=56s840ms).
2022-09-07 20:58:00.219  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m13s306ms).
2022-09-07 21:00:26.436  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m26s218ms).
2022-09-07 21:34:41.041  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=34m14s605ms).
2022-09-07 22:00:32.798  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=25m51s757ms).
2022-09-07 22:11:30.470  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m57s671ms).
2022-09-07 22:12:49.880  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s411ms).
2022-09-07 22:15:39.743  WARN 93888 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m19s842ms).
